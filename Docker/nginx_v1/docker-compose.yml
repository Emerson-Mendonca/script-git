services:
  app_service:
    image: nginx:alpine
    container_name: app_service
    ports:
      - "8080:80"
    volumes:
      - ./app_service/html:/usr/share/nginx/html
    networks:
      - frontend
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost"]
      interval: 10s
      timeout: 5s
      retries: 3

  app_service_2:
    image: nginx:alpine
    container_name: app_service_2
    ports:
      - "8082:80"
    volumes:
      - ./app_service_2/html:/usr/share/nginx/html
    networks:
      - frontend
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost"]
      interval: 10s
      timeout: 5s
      retries: 3

  db:
    image: postgres:15
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: senha
      POSTGRES_DB: meubanco
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: nginx_proxy
    ports:
      - "80:80"
      - "5432:5432"
    environment:
      - BACKENDS=app_service:80 app_service_2:80
      - POSTGRES_SERVICE=db:5432
    volumes:
      - certs:/etc/nginx/certs:ro
    networks:
      - frontend
      - backend
    depends_on:
      db:
        condition: service_healthy
      app_service:
        condition: service_healthy
      app_service_2:
        condition: service_healthy
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  pgdata:
  certs:

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge